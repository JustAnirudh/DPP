	.file	"Stack.c"
	.comm	s,28,16
	.section	.rodata
.LC0:
	.string	"Stack is full.Cant push more"
	.text
	.globl	push
	.type	push, @function
push:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movl	s+24(%rip), %eax
	cmpl	$5, %eax
	jne	.L2
	movl	$.LC0, %edi
	call	puts
	jmp	.L1
.L2:
	movl	s+24(%rip), %eax
	addl	$1, %eax
	movl	%eax, s+24(%rip)
	movl	s+24(%rip), %eax
	cltq
	movl	-4(%rbp), %edx
	movl	%edx, s(,%rax,4)
	nop
.L1:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	push, .-push
	.section	.rodata
	.align 8
.LC1:
	.string	"Nothing to pop. Stack is empty"
	.text
	.globl	pop
	.type	pop, @function
pop:
.LFB1:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	s+24(%rip), %eax
	cmpl	$-1, %eax
	jne	.L5
	movl	$.LC1, %edi
	call	puts
	movl	s+24(%rip), %eax
	jmp	.L6
.L5:
	movl	s+24(%rip), %eax
	cltq
	movl	s(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	s+24(%rip), %eax
	subl	$1, %eax
	movl	%eax, s+24(%rip)
	movl	-4(%rbp), %eax
.L6:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	pop, .-pop
	.section	.rodata
.LC2:
	.string	"Stack is empty"
	.text
	.globl	peek
	.type	peek, @function
peek:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	s+24(%rip), %eax
	cmpl	$-1, %eax
	jne	.L8
	movl	$.LC2, %edi
	call	puts
	movl	s+24(%rip), %eax
	jmp	.L9
.L8:
	movl	s+24(%rip), %eax
	cltq
	movl	s(,%rax,4), %eax
.L9:
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	peek, .-peek
	.section	.rodata
.LC3:
	.string	"%d ->"
.LC4:
	.string	"null"
	.text
	.globl	print
	.type	print, @function
print:
.LFB3:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	s+24(%rip), %eax
	movl	%eax, -4(%rbp)
	jmp	.L11
.L12:
	movl	-4(%rbp), %eax
	cltq
	movl	s(,%rax,4), %eax
	movl	%eax, %esi
	movl	$.LC3, %edi
	movl	$0, %eax
	call	printf
	subl	$1, -4(%rbp)
.L11:
	cmpl	$0, -4(%rbp)
	jns	.L12
	movl	$.LC4, %edi
	call	puts
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE3:
	.size	print, .-print
	.section	.rodata
.LC5:
	.string	"Implementing Stacks"
	.text
	.globl	main
	.type	main, @function
main:
.LFB4:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	$.LC5, %edi
	call	puts
	movl	$-1, s+24(%rip)
	movl	$1, %edi
	call	push
	movl	$2, %edi
	call	push
	movl	$3, %edi
	call	push
	movl	$4, %edi
	call	push
	movl	$5, %edi
	call	push
	movl	$0, %eax
	call	pop
	movl	$0, %eax
	call	pop
	movl	$0, %eax
	call	pop
	movl	$51, %edi
	call	push
	movl	$52, %edi
	call	push
	movl	$53, %edi
	call	push
	movl	$54, %edi
	call	push
	movl	$0, %eax
	call	print
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE4:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4"
	.section	.note.GNU-stack,"",@progbits
